

%% Pohl

clear all; clc; close all; format long

% Pohl pendulum is an oscillator like the one in tourbillon automatic
% watches. Here we fit its resonance curve.

% Data
  M = [3.12378700000000,3.79205259226382;
       7.13957800000000,0.0484841915861459;
       2.69896300000000,1.67360632874642;
       2.29917500000000,1.25160426043701;
       3.49007700000000,2.38476476643719;
       4.34491800000000,0.491547867362077;
       4.73238300000000,0.340027913299259;
       5.19099900000000,0.333382751401243;
       5.56575900000000,0.291947770857485;
       5.94379500000000,0.241105406929550;
       6.34665200000000,0.215725081895537];
  x = M(:,1); y = M(:,2);

% Fitting model and p0 - initial seek
  model = @(x,p)  (p(1))./(sqrt((p(2) - x.^2).^2 + x.^2.*p(3) ));
  p0 = [5;11;0.2];

% Fit with NonLinearModelFit function
  labels.titlestr = '';                      
  labels.xlabelstr = '$\omega \, (\mathrm{s^{-1}})$'; 
  labels.ylabelstr = '$A\, (\mathrm{u})$'; 
  [pf,a] = NonLinearModelFit(model,x,y,p0,0.95,labels);

  
%% Measurement of conductivity without touching material itself

clear all; clc; close all; format long

% Data
  M = [[100.000000, 0.958333];
       [200.000000, 0.964912]; 
       [300.000000, 0.952381]; 
       [400.000000, 0.948276]; 
       [500.000000, 0.952381]; 
       [700.000000, 0.947712]; 
       [1000.000000, 0.944444]; 
       [1250.000000, 0.944444]; 
       [1500.000000, 0.934343]; 
       [1750.000000, 0.934343]; 
       [2000.000000, 0.928571]; 
       [3000.000000, 0.900901]; 
       [5000.000000, 0.784314]; 
       [7000.000000, 0.659420]; 
       [10000.000000, 0.550725]; 
       [10500.000000, 0.493333]; 
       [12000.000000, 0.467949]; 
       [15000.000000, 0.381720]; 
       [17000.000000, 0.303030]; 
       [20000.000000, 0.277778]; 
       [30000.000000, 0.188596]; 
       [40000.000000, 0.141026]; 
       [50000.000000, 0.089744]; 
       [60000.000000, 0.081140]; 
       [80000.000000, 0.051802]; 
       [100000.000000, 0.032407]; 
       [150000.000000, 0.012626]];
  x = M(:,1); y = M(:,2);

% Fitting model and p0 - initial seek
  model = @(x,p) ((cosh(sqrt(2.*pi).*p(1).*sqrt(x)).*cos(sqrt(2.*pi).*p(1).*sqrt(x))).^2 + (sinh(sqrt(2.*pi).*p(1).*sqrt(x)).*sin(sqrt(2.*pi).*p(1).*sqrt(x))).^2).^(-1/2);
  p0 = [0.005]';

% Fit with NonLinearModelFit function
  [pf,a] = NonLinearModelFit(model,x,y,p0);